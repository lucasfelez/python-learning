import { stdout as slog } from 'single-line-log';
import chalk from 'chalk';

const dynamicText = ['◰---', '-◳--', '--◲-', '---◱', '--◰-', '-◳--', '◲---'];
var dynamicTextIndex = 0;
export default class {
	constructor(description, total, bar_length) {
		var render = setInterval(() => {
			dynamicTextIndex++;
			dynamicTextIndex %= dynamicText.length;
		}, 100);
		// 两个基本参数(属性)
		this.description = description || 'Progress'; // 命令行开头的文字信息
		this.length = bar_length || 25; // 进度条的长度(单位：字符)，默认设为 25
		this.total = total || 100;
		// 刷新进度条图案、文字的方法
		this.render = function (completed) {
			var percent = (completed / this.total).toFixed(4); // 计算进度(子任务的 完成数 除以 总数)
			var cell_num = Math.floor(percent * this.length); // 计算需要多少个 █ 符号来拼凑图案

			// 拼接黑色条
			var cell = '';
			for (var i = 0; i < cell_num; i++) {
				cell += '-';
			}
			cell = chalk.green(cell);

			// 拼接灰色条
			var empty = '';
			for (var i = 0; i < this.length - cell_num; i++) {
				empty += '-';
			}
			empty = chalk.red(empty);
			// 拼接最终文本
			var cmdText = `${this.description}: ${(100 * percent).toFixed(
				2
			)}% ${cell}${empty} ${completed}/${this.total} ${
				completed != this.total
					? chalk.rgb(
							Math.ceil(255 * Number(completed / this.total)),
							47,
							14
					  )(dynamicText[dynamicTextIndex])
					: chalk.bgRedBright.bold('COMPLETED')
			} `;

			// 在单行输出文本
			slog(cmdText);
			if (completed >= this.total) {
				clearInterval(render);
			}
		};
	}
}
